{
  "author": {
    "name": "Don Park",
    "email": "donpark@docuverse.com",
    "url": "http://blog.docuverse.com"
  },
  "name": "session-mongoose",
  "description": "connect session store implementation using Mongoose",
  "version": "0.2.2",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/donpark/session-mongoose.git"
  },
  "engines": {
    "node": ">= v0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "mongoose": ">= 3.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "connect": "*",
    "express": "*",
    "supertest": "*"
  },
  "readme": "`session-mongoose` module is an implementation of `connect` session store using [Mongoose](http://mongoosejs.com).\n\n## Status ##\n\nI believe every open source project should clearly indicate its status and intended applications\nof the project. In that spirit, here is the status of `session-mongoose`.\n\nThis project is IMO not production-ready for following reasons:\n\n1. insufficient testing\n2. zero optimization\n3. there are better options than MongoDB for session storage.\n\nI use `session-mongoose` primarily in prototype webapps where above factors don't matter.\n\nAccordingly, I am ready to commit just enough time to fix things when things break.\nI can't guarantee all reported issues will be fixed in reasonable amount of time but\nI do try to address them promptly mainly because I can't sleep at night when someone\nin need is out there.\n\n## Implementation Note:\n\nUses its own instance of Mongoose object, leaving default instance for use by the app.\n\n## Install\n\n    npm install session-mongoose\n\n## Usage\n\nCreate session store:\n\n    var connect = require('connect');\n    var SessionStore = require(\"session-mongoose\")(connect);\n    var store = new SessionStore({\n        url: \"mongodb://localhost/session\",\n        interval: 120000 // expiration check worker run interval in millisec (default: 60000)\n    });\n\nConfigure Express\n\n    var express = require(\"express\");\n    var SessionStore = require(\"session-mongoose\")(express);\n    var store = new SessionStore({\n        url: \"mongodb://localhost/session\",\n        interval: 120000 // expiration check worker run interval in millisec (default: 60000)\n    });\n    ...\n    // configure session provider\n    app.use(express.session({\n        store: store,\n        cookie: { maxAge: 900000 } // expire session in 15 min or 900 seconds\n    });\n    ...\n\nThat's it.\n\n## Version 0.2 Migration Note\n\n* an instance of `connect` module (or equivalent like `express`) is now **required** to get\n  SessionStore implementation (see examples above).\n\n* moved Mongoose model for session data to session store instance (SessionStore.model).\n\n        var connect = require('connect');\n        var SessionStore = require(\"session-mongoose\")(connect);\n        var store = new SessionStore({\n            url: \"mongodb://localhost/session\",\n            interval: 120000 // expiration check worker run interval in millisec (default: 60000)\n        });\n        var model = store.model; // Mongoose model for session\n\n        // this wipes all sessions\n        model.collection.drop(function (err) { console.log(err); });\n\n## Version 0.1 Migration Note\n\n* `connect` moved from `dependencies` to `devDependencies`.\n\n## Version 0.0.3 Migration Note\n\nVersion 0.0.3 changes Mongoose schema data type for session data from JSON string to `Mixed`.\n\nIf you notice any migration issues, please file an issue.\n",
  "readmeFilename": "README.md",
  "_id": "session-mongoose@0.2.2",
  "_from": "session-mongoose@0.2.x"
}
