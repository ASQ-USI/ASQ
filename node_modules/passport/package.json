{
  "name": "passport",
  "version": "0.1.16",
  "description": "Simple, unobtrusive authentication for Node.js.",
  "keywords": [
    "express",
    "connect",
    "auth",
    "authn",
    "authentication"
  ],
  "homepage": "http://passportjs.org/",
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport",
  "dependencies": {
    "pkginfo": "0.2.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport\n[http://passportjs.org](http://passportjs.org)\n\nPassport is an authentication framework for [Connect](http://senchalabs.github.com/connect/)\nand [Express](http://expressjs.com/), which is extensible through \"plugins\"\nknown as _strategies_.\n\nPassport is designed to be a general-purpose, yet simple, modular, and\nunobtrusive, authentication framework.  Passport's sole purpose is to\nauthenticate requests.  In being modular, it doesn't force any particular\nauthentication strategy on your application.  In being unobtrusive, it doesn't\nmount routes in your application.  The API is simple: you give Passport a\nrequest to authenticate, and Passport provides hooks for controlling what occurs\nwhen authentication succeeds or fails.\n\n## Install\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore asking passport to authenticate a request, the strategy (or strategies)\nused by an application must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide a function to Passport which implements the necessary\nserialization and deserialization logic.  In typical applications, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Connect/Express Middleware\n\nTo use Passport in a [Connect](http://senchalabs.github.com/connect/) or\n[Express](http://expressjs.com/)-based application, configure it with the\nrequired `passport.initialize()` middleware.  If your applications uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n      app.use(express.static(__dirname + '/../../public'));\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function (which is standard\nConnect/Express middleware), which is utilized to authenticate requests.\n\nFor example, it can be used as route middleware in an Express application:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [Passport-Local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\n- [Local](https://github.com/jaredhanson/passport-local) (username and password)\n- [BrowserID](https://github.com/jaredhanson/passport-browserid)\n- [OpenID](https://github.com/jaredhanson/passport-openid)\n- [OAuth](https://github.com/jaredhanson/passport-oauth) (OAuth 1.0 and 2.0)\n- [SAML](https://github.com/bergie/passport-saml) by [Henri Bergius](https://github.com/bergie)\n- [WS-Federation + SAML 2.0](https://github.com/auth10/passport-wsfed-saml2) by [Auth10](https://github.com/auth10)\n- [WebID](https://github.com/magnetik/passport-webid) by [Baptiste Lafontaine](https://github.com/magnetik)\n- [23andMe](https://github.com/mowens/passport-23andme) by [Michael Owens](https://github.com/mowens)\n- [37signals](https://github.com/jaredhanson/passport-37signals)\n- [500px](https://github.com/jeremybenaim/passport-500px) by [Jeremy Benaim](https://github.com/jeremybenaim)\n- [AngelList](https://github.com/jaredhanson/passport-angellist)\n- [AOL](https://github.com/jaredhanson/passport-aol)\n- [App.net](https://github.com/mowens/passport-appdotnet) by [Michael Owens](https://github.com/mowens)\n- [Bitbucket](https://github.com/jaredhanson/passport-bitbucket)\n- [Buffer](https://github.com/despekiroule/passport-bufferapp) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [DailyCred](https://github.com/hstove/passport-dailycred) by [Hank Stoever](https://github.com/hstove)\n- [Digg](https://github.com/jaredhanson/passport-digg)\n- [doctape](https://github.com/doctape/passport-doctape)\n- [Dropbox](https://github.com/jaredhanson/passport-dropbox)\n- [Dwolla](https://github.com/jaredhanson/passport-dwolla)\n- [Evernote](https://github.com/jaredhanson/passport-evernote)\n- [Facebook](https://github.com/jaredhanson/passport-facebook)\n- [FamilySearch](https://github.com/jaredhanson/passport-familysearch)\n- [Fitbit](https://github.com/jaredhanson/passport-fitbit)\n- [Flattr](https://github.com/freenerd/passport-flattr) by [Johan Uhle](https://github.com/freenerd)\n- [Flickr](https://github.com/johnnyhalife/passport-flickr) by [Johnny Halife](https://github.com/johnnyhalife)\n- [Force.com](https://github.com/joshbirk/passport-forcedotcom) (Salesforce, Database.com) by [Joshua Birk](https://github.com/joshbirk)\n- [Foursquare](https://github.com/jaredhanson/passport-foursquare)\n- [FreedomWorks](https://github.com/carlos8f/passport-freedomworks) by [Carlos Rodriguez](https://github.com/carlos8f)\n- [Geeklist](https://github.com/despekiroule/passport-geeklist) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [Geoloqi](https://github.com/jaredhanson/passport-geoloqi)\n- [GitHub](https://github.com/jaredhanson/passport-github)\n- [Goodreads](https://github.com/jaredhanson/passport-goodreads)\n- [Google](https://github.com/jaredhanson/passport-google) (OpenID)\n- [Google](https://github.com/jaredhanson/passport-google-oauth) (OAuth 1.0 and 2.0)\n- [Gowalla](https://github.com/jaredhanson/passport-gowalla)\n- [HackID](https://github.com/HackBerkeley/passport-hackid) by [Hackers @ Berkeley](https://github.com/HackBerkeley)\n- [Instagram](https://github.com/jaredhanson/passport-instagram)\n- [Intuit](https://github.com/jaredhanson/passport-intuit) (OpenID)\n- [Intuit](https://github.com/jaredhanson/passport-intuit-oauth) (OAuth 1.0)\n- [Justin.tv](https://github.com/jaredhanson/passport-justintv)\n- [LinkedIn](https://github.com/jaredhanson/passport-linkedin)\n- [me2day](https://github.com/outsideris/passport-me2day) by [JeongHoon Byun](https://github.com/outsideris)\n- [Meetup](https://github.com/jaredhanson/passport-meetup)\n- [Netflix](https://github.com/jaredhanson/passport-netflix)\n- [Odnoklassniki](https://github.com/ozon1234/passport-odnoklassniki) by [Alexey Kozlov](https://github.com/ozon1234)\n- [Ohloh](https://github.com/jaredhanson/passport-ohloh)\n- [OpenStreetMap](https://github.com/jaredhanson/passport-openstreetmap)\n- [PayPal](https://github.com/jaredhanson/passport-paypal) (OpenID)\n- [PayPal](https://github.com/jaredhanson/passport-paypal-oauth) (OAuth 2.0)\n- [picplz](https://github.com/jaredhanson/passport-picplz)\n- [Rdio](https://github.com/jaredhanson/passport-rdio)\n- [Readability](https://github.com/jaredhanson/passport-readability)\n- [RunKeeper](https://github.com/jaredhanson/passport-runkeeper)\n- [SmugMug](https://github.com/jaredhanson/passport-smugmug)\n- [SharePoint](https://github.com/QuePort/passport-sharepoint) by [QuePort](https://github.com/QuePort)\n- [SoundCloud](https://github.com/jaredhanson/passport-soundcloud)\n- [StatusNet](https://github.com/zoowar/passport-statusnet) by [ZooWar](https://github.com/zoowar)\n- [Steam](https://github.com/liamcurry/passport-steam) by [Liam Curry](https://github.com/liamcurry)\n- [SUPINFO](https://github.com/godezinc/passport-supinfo) by [Vincent PEYROUSE](https://github.com/GodezInc)\n- [Trade Me](https://github.com/Tumunu/passport-trademe) by [Tumunu](https://github.com/Tumunu)\n- [TripIt](https://github.com/jaredhanson/passport-tripit)\n- [Tumblr](https://github.com/jaredhanson/passport-tumblr)\n- [Twitter](https://github.com/jaredhanson/passport-twitter)\n- [TxSSC](https://github.com/TxSSC/passport-txssc) by [Texas School Safety Center](https://github.com/TxSSC)\n- [Urlship](https://github.com/urlship/passport-urlship) by [Urlship](https://github.com/urlship)\n- [Vimeo](https://github.com/jaredhanson/passport-vimeo)\n- [VKontakte](https://github.com/stevebest/passport-vkontakte) by [Stepan Stolyarov](https://github.com/stevebest)\n- [Windows Live](https://github.com/jaredhanson/passport-windowslive)\n- [Withings](https://github.com/mowens/passport-withings) by [Michael Owens](https://github.com/mowens)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo) (OpenID)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo-oauth) (OAuth 1.0)\n- [Yammer](https://github.com/jaredhanson/passport-yammer)\n- [Yandex](https://github.com/gurugray/passport-yandex) by [Sergey Sergeev](https://github.com/gurugray)\n- [Atlassian Crowd](https://bitbucket.org/knecht_andreas/passport-atlassian-crowd) by [Andreas Knecht](https://bitbucket.org/knecht_andreas)\n- [OpenSSO](https://github.com/oroce/passport-opensso) by [Róbert Oroszi](https://github.com/oroce)\n- [OpenAM](https://github.com/alesium/passport-openam) by [Alesium](https://github.com/alesium)\n- [Drupal](https://github.com/mixmarket/passport-drupal) by [Victor Kareh](https://github.com/vkareh) (for Drupal-powered sites using [OAuth Login Provider](http://drupal.org/project/oauthloginprovider) module)\n- [HTTP](https://github.com/jaredhanson/passport-http) (HTTP Basic and Digest schemes)\n- [HTTP-Bearer](https://github.com/jaredhanson/passport-http-bearer) (HTTP Bearer scheme)\n- [HTTP-OAuth](https://github.com/jaredhanson/passport-http-oauth) (HTTP OAuth scheme)\n- [OAuth2-Client-Password](https://github.com/jaredhanson/passport-oauth2-client-password) (OAuth 2.0 client password)\n- [Hash](https://github.com/yuri-karadzhov/passport-hash) (hash parameter) by [Yuri Karadzhov](https://github.com/yuri-karadzhov)\n- [Anonymous](https://github.com/jaredhanson/passport-anonymous)\n- [Dummy](https://github.com/developmentseed/passport-dummy) by [Development Seed](https://github.com/developmentseed)\n\n**Attention Developers:** If you implement a new authentication strategy for\nPassport, send me a message and I will update the list.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "_id": "passport@0.1.16",
  "_from": "passport@0.1.x"
}
