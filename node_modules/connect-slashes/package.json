{
  "name": "connect-slashes",
  "version": "0.0.10",
  "description": "Trailing slash redirect middleware for Connect",
  "keywords": [
    "trailing",
    "slash",
    "connect",
    "middleware"
  ],
  "author": {
    "name": "Roi Avinoam",
    "email": "avinoamr@gmail.com"
  },
  "contributors": [
    {
      "name": "Feross Aboukhadijeh",
      "email": "feross@feross.org",
      "url": "http://feross.org"
    },
    {
      "name": "brunogfranca",
      "url": "https://github.com/brunogfranca"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:avinoamr/connect-slashes.git"
  },
  "dependencies": {},
  "main": "index",
  "engines": {
    "node": "*"
  },
  "readme": "connect-slashes\n===============\n\nTrailing slash redirect middleware for Connect. Useful for creating canonical urls in your Node.js applications.\n\n## Installation\n\n```\n$ npm install connect-slashes\n```\n\n## Usage\n\n```javascript\nvar connect = require(\"connect\")\n  , slashes = require(\"connect-slashes\");\n\nconnect()\n  .use(connect.logger())\n  .use(connect.static())\n  .use(slashes())\n  .listen(3000); \n```\n\nAlternatively, you can pass `false` as the only argument to `.slashes()` in order to remove trailing slashes instead of appending them:\n\n```javascript\n.use(slashes(false));\n``` \n\n## Notes\n\n1. Only GET requests will be redirected (to avoid losing POST/PUT data)\n2. This middleware will append or removes a trailing slash to all request urls. This includes filenames (/app.css => /app.css/), so it may break your static files. Make sure to `.use()` this middleware only after the `connect.static()` middleware. ",
  "readmeFilename": "README.md",
  "_id": "connect-slashes@0.0.10",
  "_from": "connect-slashes@0.0.x"
}
