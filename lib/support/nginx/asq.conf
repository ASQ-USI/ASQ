## ASQ
## Maintainer: @triglian
##
## Modified from https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/support/nginx/gitlab
## Lines starting with two hashes (##) are comments with information.
## Lines starting with one hash (#) are configuration parameters that can be uncommented.

#ASQ
upstream asq_node_upstream {
    ##sticky connections
    ip_hash;
    server localhost:3000;
    keepalive 64;
}

server {
    listen 80 default_server;
    listen [::]:80 ipv6only=on default_server;

    server_name _; ## Replace this with something like asq.example.com
    server_tokens off; ## Don't show the nginx version number, a security best practice
    client_max_body_size 50M;

    ## if upstream fails
    error_page 502  /errors/502.html;

    ## serve static assets
    location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|fonts/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
      root /ASQ/public;
      access_log off;
      expires max;
    }
    
    # server static assets for presentations. 
    # matches: /:user/presentations/:presentationid/live/liveid/*
    location ~ ^/[a-zA-z]+/presentations/([\da-f]+)/live/[\da-f]+/(.+) {
      alias /ASQ/slides/$1/$2;
      access_log off;
      expires max;
    }

    location /errors {
      internal;
      alias /ASQ/public/errors;
    }

    # deny access to . files, for security
    #
    location ~ /\. {
          access_log off;
          log_not_found off; 
          deny all;
    }

    ## proxy to node
    location / {
      proxy_redirect off;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Host $host;
      proxy_set_header   X-NginX-Proxy true;
      proxy_set_header   Connection "";
      proxy_http_version 1.1;
      proxy_pass http://asq_node_upstream/;
      ## upgrade is used for websockets
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      tcp_nodelay on;
    }
}