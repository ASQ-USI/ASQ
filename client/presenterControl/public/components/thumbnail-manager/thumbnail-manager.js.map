{"version":3,"sources":["webpack:///webpack/bootstrap 593041669052bb3f89f6","webpack:///./public/components/thumbnail-manager/_thumbnail-manager.js","webpack:///./~/bows/bows.js","webpack:///./~/bows/~/andlog/andlog.js","webpack:///./public/components/thumbnail-manager/impressThumbGenerator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAwB,YAAY;AACpC;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,WAAW;AACnC;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,YAAY;AACpC;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,iCAAgC;;;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK,K;AACL;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,yBAAyB;AAC7E;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,UAAS,cAAc,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;AACtE,MAAK;AACL,IAAG;;AAEH;AACA;AACA,gBAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA,uBAAsB,kBAAkB;AACxC,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC;;;;;;;AC/TD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;;AAEzD;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;;;;;;AC1GD,wDAAuD;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;;;;;;;AC5BD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,U;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA,MAAK,E;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK,KAAK;AACV;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,Q;AACA;AACA,6BAA4B,I;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"thumbnail-manager.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 593041669052bb3f89f6\n **/","'use strict';\n\nvar debug = require('bows')('thumbnail-manager')\nvar thumbGenerator = require('./impressThumbGenerator');\n\n/** copied from impress.js (Copyright 2011-2012 Bartek Szopka (@bartaz))\n* @function triggerEvent\n* @description builds a custom DOM event with given `eventName` and `detail` data\n* and triggers it on element given as `el`.\n*/\nvar triggerEvent = function (el, eventName, detail) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(eventName, true, true, detail);\n  el.dispatchEvent(event);\n};\n\nPolymer( {\n\n  is: 'thumbnail-manager',\n\n  properties: {\n    target:{\n      type: Object,\n      value: function(){ return {};},\n      notify: true\n    },\n\n    thumbs:{\n      type: Array,\n      value: function(){return [];},\n      notify: true\n    },\n\n    eventBus:{\n      type: Object,\n      value: function(){ return {};},\n      notify: true\n    }\n  },\n\n  ready: function(){\n    this.impressEl = null;\n    this.thumbs = [];\n    // sels for thumbs and containers\n    this.sels = {\n      thumbsBarId: '#thumbs-bar',\n      thumbsHolderId    : '#thumb-holder',\n      thumbListClass    : 'thumb-li',\n      thumbContainerClass  : 'thumb',\n      slideThumbClass : 'thumb-step',\n      dragBarId: '#thumbs-bar #dragbar',\n    };\n\n    this.thumbGenerator = thumbGenerator({\n      impressEl: this.impressEl,\n      sels: this.sels\n    });\n  },\n\n  // external function that will redraw all the slides\n  redrawSlideShow : function(){},\n\n\n  /** @function validateProps\n  *   @description: validates properties\n  */\n  validateProps: function (){\n    // we should have a root element to search for steps\n    if(! this.impressEl){\n      this.impressEl = document;\n    }\n  },\n\n  /** @function init\n  *   @description: adds resize listeners to the thumb container,\n  *   and creates the thumbs for existing slides\n  */\n  init : function(){\n    this.validateProps();\n    var sels = this.sels;\n\n    if(this.$.config.values.shouldGenerateThumbnails ){\n      var ffRules = this.getFontFaceRules(this.impressEl);\n      var regx = new RegExp(this.$.config.values.rootUrl, 'ig');\n\n      var ffStrings = ffRules.map(function(rule){\n        return rule.cssText.replace(regx, '');\n      }.bind(this));\n\n      this.persistFontFaces(ffStrings);\n\n      this.generateThumbs();\n      this.persistThumbs();\n\n      this.injectFontFaceStrings(ffStrings);\n      this.resizeThumbs();\n      this.showThumbs();\n    }else{ \n      //thumbs are already generated and up to date\n      this.requestThumbs();\n      this.requestFontFaces();\n    }\n    \n  },\n\n  generateThumbs : function(thumb, index){\n    //add thumbs choose all elements \n    var steps = this.impressEl.querySelectorAll('.step');\n    [].forEach.call(steps, function pushStep(step, idx){\n      var thumb = this.thumbGenerator.createThumb(step);\n      this.thumbs.push(thumb)\n      this.injectThumb(thumb, idx) \n    }.bind(this));\n  },\n\n  persistThumbs : function(){\n    this.eventBus.emit('socket-request', {\n      name: '/user/presentation/thumbnails',\n      detail: {\n        method:\"POST\",\n        presentationId: this.$.config.values.presentationId,\n        thumbnails: this.thumbs.map(function(thumb){ return thumb.outerHTML;})\n      }\n    });\n  },\n\n  persistFontFaces : function(fontFaces){\n    this.eventBus.emit('socket-request', {\n      name: '/user/presentation/fontfaces',\n      detail: {\n        method:\"POST\",\n        presentationId: this.$.config.values.presentationId,\n        fontFaces: fontFaces\n      }\n    });\n  },\n\n  requestThumbs : function(){\n    this.eventBus.on('/user/presentation/thumbnails', function(evt){\n      var thumbnails = evt.thumbnails;\n\n      var div = document.createElement('div');\n      try{\n        thumbnails.forEach(function(thumbHtml, idx){\n          div.innerHTML = thumbHtml;\n          var thumb = div.firstChild\n          this.thumbs.push(thumb);\n          this.injectThumb(thumb, idx) ;\n        }.bind(this));\n        this.generateThumbs();\n        this.resizeThumbs();\n        this.showThumbs();\n      }catch(err){\n        debug(err, err.stack);\n      }\n    }.bind(this))\n\n    this.eventBus.emit('socket-request', {\n      name: '/user/presentation/thumbnails',\n      detail: {\n        method:\"GET\",\n        presentationId: this.$.config.values.presentationId\n      }\n    });\n  },\n\n  requestFontFaces : function(){\n    this.eventBus.on('/user/presentation/fontfaces', function(evt){\n      var fontFaces = evt.fontFaces || []\n      this.persistFontFaces(fontFaces);\n    }.bind(this));\n\n    this.eventBus.emit('socket-request', {\n      name: '/user/presentation/fontfaces',\n      detail: {\n        method:\"GET\",\n        presentationId: this.$.config.values.presentationId\n      }\n    });\n  },\n\n\n\n  /** @function injectThumb\n  *   @description: injects a cloned slide to the thumb bar after it wraps it with\n  * a container element and a label. index \n  * is a parameter that jQuery each() functions pass. It's not\n  * used currently\n  */\n  injectThumb : function(thumb, index){\n    var sels = this.sels\n    , ref = thumb.dataset.references\n    , impressBody= this.impressEl.body;\n\n    // look if the body has an impress-on-* class and cache it\n    var saved_body_class\n      , body_classes = impressBody.classList;\n\n    for (var i = 0; i < body_classes.length; i++) {\n      var c = body_classes[i];\n      if (c.match('^impress-on-')) {\n        saved_body_class = c;\n      }\n    }\n\n    if (saved_body_class) {\n      impressBody.classList.remove(saved_body_class);\n    }\n\n    //force the body to be on the current ref slide \n    // (we're going to use the body background for the \n    // thumb background)\n    impressBody.classList.remove('impress-on-'+ref);\n\n    var pct = document.createElement(\"presenter-control-thumbnail\");\n    pct.index = index+1;\n    pct.ref = thumb.dataset.references;\n    pct.$$('#thumb').appendChild(thumb);\n    pct.style.background = impressBody.style.background;\n    pct.setAttribute('none', \"none\");\n    Polymer.dom(this.target).appendChild(pct);\n\n    //clean up body impress-on- class and restore previous one\n    impressBody.classList.remove('impress-on-'+ref);\n\n    if (saved_body_class) {\n      impressBody.classList.add(saved_body_class);\n    }\n  },\n\n  showThumbs : function(){\n  \n    var animations = Polymer.dom(this.target).querySelectorAll(\"presenter-control-thumbnail\")\n    .map(function(pct, index){\n      return new KeyframeEffect(pct, [\n        {\"opacity\" : 0}, {\"opacity\" : 0.7}\n        ], {\n          duration: 200,\n          delay: 120 * index,\n          easing: 'ease-out', \n          iterations:1,\n          fill:\"backwards\"\n      });\n    });\n    var seq = new GroupEffect(animations);\n    document.timeline.play(seq);\n  },\n\n\n  /** @function selectThumb\n  *   @description: Highlight the thumb that corresponds to the\n  * specified thumb id\n  */\n  selectThumb : function(stepId){\n    if(stepId instanceof Array){\n\n    }else if(typeof stepId == 'string'){\n\n    }\n\n    var selectedThumb = this.target.querySelector('.' + this.sels.thumbContainerClass+'[data-references='+ stepId+']');\n    [].forEach.call(selectedThumb.parentNode.childNodes, function removeActiveClass(el){\n      el.classList.remove('active');\n    });\n    selectedThumb.classList.add('active');\n  },\n \n  /** @function insertThumb\n  *   @description: given a step id it creates the corresponding\n  * thumb and adds it to the thumbar\n  */\n  insertThumb : function(stepId){\n    var newThumb = this.thumbGenerator.createThumb(impressEl.querySelectorAll('#' + stepId));\n    // this.$thumbs = this.$thumbs.add($newThumb);\n\n    this.injectThumb(0, newThumb)\n    that.resizeThumbs();\n  },\n\n  /** @function resizeThumbs\n  *   @description: resizes all thumbs to fit their container width\n  */\n  resizeThumbs : function(){\n    this.thumbs.forEach( function resizeThumb(thumb){\n      this.thumbGenerator.resizeThumb(thumb, {width: 200, height: 150});\n    }.bind(this));\n  },\n\n  /** @function getFontFaceRules\n  *   @description: resizes all CSSFontFaceRule rules in a doc\n  *   @param: {HTMLDocument} doc the document to get the FontFaceRules from\n  */\n  getFontFaceRules: function(doc){\n    var ffRules = [];\n    var sheets = doc.styleSheets;\n      for(var i = 0; i < sheets.length; i++) {\n        var rules = sheets[i].rules || sheets[i].cssRules;\n        if(! rules) continue;\n        for(var r = 0; r < rules.length; r++) {\n          if(rules[r].type == 5 ){ // CSSFontFaceRule\n            ffRules.push(rules[r]);\n         }\n        }\n      }\n      return ffRules;\n  },\n\n  /** @function injectFontFaceStrings\n  *   @description: injects passed string to the document head inside a style element\n  *   @param: [string] fontFaceStrings the font face rule strings to inject\n  */\n  injectFontFaceStrings: function(fontFaceStrings){\n    var style = document.createElement(\"style\");\n    fontFaceStrings.forEach(function(ff){\n      style.appendChild(document.createTextNode(ff));\n    });\n\n    document.head.appendChild(style);\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/components/thumbnail-manager/_thumbnail-manager.js\n ** module id = 0\n ** module chunks = 0\n **/","(function() {\n  function checkColorSupport() {\n    if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n      return false;\n    }\n    var chrome = !!window.chrome,\n        firefox = /firefox/i.test(navigator.userAgent),\n        firefoxVersion;\n\n    if (firefox) {\n        var match = navigator.userAgent.match(/Firefox\\/(\\d+\\.\\d+)/);\n        if (match && match[1] && Number(match[1])) {\n            firefoxVersion = Number(match[1]);\n        }\n    }\n    return chrome || firefoxVersion >= 31.0;\n  }\n\n  var yieldColor = function() {\n    var goldenRatio = 0.618033988749895;\n    hue += goldenRatio;\n    hue = hue % 1;\n    return hue * 360;\n  };\n\n  var inNode = typeof window === 'undefined',\n      ls = !inNode && window.localStorage,\n      debugKey = ls.andlogKey || 'debug',\n      debug = ls[debugKey],\n      logger = require('andlog'),\n      bind = Function.prototype.bind,\n      hue = 0,\n      padLength = 15,\n      noop = function() {},\n      colorsSupported = ls.debugColors || checkColorSupport(),\n      bows = null,\n      debugRegex = null,\n      invertRegex = false,\n      moduleColorsMap = {};\n\n  if (debug && debug[0] === '!' && debug[1] === '/') {\n    invertRegex = true;\n    debug = debug.slice(1);\n  }\n  debugRegex = debug && debug[0]==='/' && new RegExp(debug.substring(1,debug.length-1));\n\n  var logLevels = ['log', 'debug', 'warn', 'error', 'info'];\n\n  //Noop should noop\n  for (var i = 0, ii = logLevels.length; i < ii; i++) {\n      noop[ logLevels[i] ] = noop;\n  }\n\n  bows = function(str) {\n    var msg, colorString, logfn;\n    msg = (str.slice(0, padLength));\n    msg += Array(padLength + 3 - msg.length).join(' ') + '|';\n\n    if (debugRegex) {\n        var matches = str.match(debugRegex);\n        if (\n            (!invertRegex && !matches) ||\n            (invertRegex && matches)\n        ) return noop;\n    }\n\n    if (!bind) return noop;\n\n    var logArgs = [logger];\n    if (colorsSupported) {\n      if(!moduleColorsMap[str]){\n        moduleColorsMap[str]= yieldColor();\n      }\n      var color = moduleColorsMap[str];\n      msg = \"%c\" + msg;\n      colorString = \"color: hsl(\" + (color) + \",99%,40%); font-weight: bold\";\n\n      logArgs.push(msg, colorString);\n    }else{\n      logArgs.push(msg);\n    }\n\n    if(arguments.length>1){\n        var args = Array.prototype.slice.call(arguments, 1);\n        logArgs = logArgs.concat(args);\n    }\n\n    logfn = bind.apply(logger.log, logArgs);\n\n    logLevels.forEach(function (f) {\n      logfn[f] = bind.apply(logger[f] || logfn, logArgs);\n    });\n    return logfn;\n  };\n\n  bows.config = function(config) {\n    if (config.padLength) {\n      padLength = config.padLength;\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = bows;\n  } else {\n    window.bows = bows;\n  }\n}).call();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bows/bows.js\n ** module id = 1\n ** module chunks = 0\n **/","// follow @HenrikJoreteg and @andyet if you like this ;)\n(function () {\n    var inNode = typeof window === 'undefined',\n        ls = !inNode && window.localStorage,\n        out = {};\n\n    if (inNode) {\n        module.exports = console;\n        return;\n    }\n\n    var andlogKey = ls.andlogKey || 'debug'\n    if (ls && ls[andlogKey] && window.console) {\n        out = window.console;\n    } else {\n        var methods = \"assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn\".split(\",\"),\n            l = methods.length,\n            fn = function () {};\n\n        while (l--) {\n            out[methods[l]] = fn;\n        }\n    }\n    if (typeof exports !== 'undefined') {\n        module.exports = out;\n    } else {\n        window.console = out;\n    }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bows/~/andlog/andlog.js\n ** module id = 2\n ** module chunks = 0\n **/","var debug = require('bows')(\"impressThumbGenerator\")\nmodule.exports = function(opts){\n  var impressEl = null\n    , options = opts\n    , thumbs = [];\n\n\n  var resizeConf = {\n    width: \"360\",\n    height: \"240\"\n  }\n\n  // sels for thumbs and containers\n  sels = {\n    thumbContainerClass  : \"thumb\",\n    slideThumbClass : \"thumb-step\"\n  };\n\n  /** @function _validateAndSetOptions\n  *   @description: validates external options and, if valid, overrides defaults\n  */\n  function _validateAndSetOptions(options){\n    if(!options){return;}\n\n    if(options.impressEl){\n      impressEl = options.impressEl\n    }else{\n      impressEl = document;\n    }\n\n    if(options.resize){\n      if(\"undefined\" === typeof options.resize.width && \"undefined\" === typeof options.resize.width){\n        debug(\"options.resize object needs at least one of the following properties: width, height\");\n      }else if(\"undefined\" !== typeof options.resize.width && isNaN(parseInt(options.resize.width))){\n        debug(\"options.resize.width should be a number\");\n      }else if(\"undefined\" !== typeof options.resize.height && isNaN(parseInt(options.resize.height))){\n        debug(\"options.resize.height should be a number\");\n      }else{\n        resizeConf = options.resize\n      }\n    }\n\n    if(options.sels){\n      for (var key in sels){\n        if( options.sels[key]){\n          if(!(typeof options.sels[key] == \"string\")){\n            console.log(\"_validateAndSetOptions(): options.sels.\" + key + \" should be a string\")\n            return;\n          }else{\n            sels[key] = options.sels[key];\n          }\n        } \n      }\n    }\n  }\n\n  /** @function createThumb\n  *   @description: creates a clone of the original element,\n  *   appends '-clone' to the original id and removes any\n  *   classes for the cloned element and its children.\n  *   iIt also adds a data-references attribute to the referenced\n  *   step and sets the transform-origin css property.\n  */\n  function createThumb(slide){\n\n    var slide_classes = slide.classList;\n    var saved_slide_classes = [];\n\n    for (var i = 0; i< slide_classes.length; i++) {\n      var c = slide_classes[i];\n      if (c.match(\"(^future|^past|^present|^active)\")) {\n        saved_slide_classes.push(c);\n      }\n    }\n\n    //remove classes\n    saved_slide_classes.forEach(function removeClasses(saved_slide_class){\n      slide.classList.remove(saved_slide_class)\n    });\n    // make every slide look like its the current one\n    slide.classList.add(\"active\");\n    slide.classList.add(\"present\");\n\n    var clone = slide.cloneNode(true)\n    , cloneId = clone.id\n\n    , styles = {\n        \"-webkit-touch-callout\" : \"\",\n        \"-webkit-user-select\" : \"\",\n        \"-khtml-user-select\" : \"\",\n        \"-moz-user-select\" : \"\",\n        \"-ms-user-select\" : \"\",\n        \"user-select\" : \"\",\n        \"pointer-events\" : \"none\",\n        \"opacity\": \"1\"\n    };\n\n    //change id only if not empty\n    clone.id = (cloneId === undefined || cloneId == '') \n      ? '' \n      : cloneId + \"-clone\";\n    clone.classList.add(sels.slideThumbClass);\n\n    //copy original computed style\n    setStylesFromObject(clone, _css(slide));\n    setStylesFromObject(clone, styles);\n\n    //add reference to original slide\n    clone.dataset.references = slide.id;\n    \n    //set transform orign property\n    clone.style[\"-webkit-transform-origin\"] = \"0 0\";\n\n    var cloneChildren = [].slice.call(clone.querySelectorAll('*'));\n    //copy original computed style for children\n    [].forEach.call(slide.querySelectorAll('*'), function copyComputedStyleForChildren(el , index){\n\n      var child = cloneChildren[index];\n      var id = child.id;\n      child.removeAttribute('id');\n      child.removeAttribute('class');\n\n       //copy original computed style\n      setStylesFromObject(child, _css(el));\n      setStylesFromObject(child, styles)\n\n    });\n\n    //revert style to original slide\n    saved_slide_classes.forEach(function revertStyles(saved_slide_class){\n\n    });   \n\n    return clone;\n  }\n\n  /** @function resizeThumb\n  *   @description: resizes a thumbs to fit specified width and height (in pixels) or both\n  */\n  function resizeThumb(thumb, options){\n    //copy resizeConf\n    var strategy = JSON.parse(JSON.stringify(resizeConf))\n    if(\"undefined\" !== typeof options){\n      if(\"undefined\" === typeof options.width && \"undefined\" === typeof options.height){\n        debug(\"options object needs at least one of the following properties: width, height\")\n      }else if(\"undefined\" !== typeof options.width && isNaN(parseInt(options.width))){\n        debug(\"options.width should be a number\")\n      }else if(\"undefined\" !== typeof options.height && isNaN(parseInt(options.height))){\n        debug(\"options.height should be a number\")\n      }else{\n        strategy = options\n      }\n    }\n \n    var scaleFactor= 1.0\n      , fixedWrapper = false;\n\n    //need to fit to the exact size\n    if(\"undefined\" !== typeof strategy.width \n      && \"undefined\" !== typeof strategy.height)\n    {\n      fixedWrapper = true;\n      var thumbContentWidth = parseInt(strategy.width)\n        , thumbContentHeight = parseInt(strategy.height)\n        , contentRatio = thumbContentWidth / thumbContentHeight\n        , thumbRatio = thumb.offsetWidth / thumb.offsetHeight;\n\n      //thumb wrapper has defined dimensions from the strategy\n      setStylesFromObject(thumb.parentNode, {\n        \"width\"  : thumbContentWidth + \"px\",\n        \"height\" : thumbContentHeight + \"px\" \n      });\n\n      // fit on height\n      if (contentRatio > thumbRatio){\n        delete strategy.width\n      }// fit on width\n      else{\n        delete strategy.height\n      }\n    }\n\n    //resize based on width\n    if(\"undefined\" !== typeof strategy.width \n      && \"undefined\" === typeof strategy.height)\n    {\n      var thumbContentWidth = parseInt(strategy.width);\n      scaleFactor =  thumbContentWidth / thumb.offsetWidth;\n    }//resize based on height\n    else {\n      var thumbContentHeight = parseInt(strategy.height);\n      scaleFactor =  thumbContentHeight / thumb.offsetHeight;\n    }\n\n    thumb.style[\"-webkit-transform\"] = \"scale(\"+scaleFactor+\")\";\n    thumb.style[\"transform\"] = \"scale(\"+scaleFactor+\")\";\n    \n\n    if(fixedWrapper){\n      setStylesFromObject(thumb.parentNode, {\n        \"position\" : \"relative\",\n        \"overflow\" : \"hidden\"\n      })\n\n      var top = (thumb.parentNode.clientHeight - (thumb.offsetHeight* scaleFactor))/ 2 + \"px\";\n      var left = (thumb.parentNode.clientWidth - (thumb.offsetWidth* scaleFactor ))/ 2 + \"px\";\n\n      setStylesFromObject(thumb, {\n        \"position\" : \"absolute\",\n        \"top\" : top,\n        \"left\" : left\n      })\n    }else{ //adjust thumb wrapper to match thumb\n      setStylesFromObject(thumb.parentNode, {\n        \"width\"  : parseInt(thumb.offsetWidth * scaleFactor) + \"px\",\n        \"height\" : parseInt(thumb.offsetHeight * scaleFactor) + \"px\" \n      });\n      setStylesFromObject(thumb, {\n        \"position\" : \"relative\",\n        \"top\" : \"0px\",\n        \"left\" : \"0px\"\n      })\n    }\n\n\n\n  }\n\n  /** @function setStylesFromObject\n  *   @description: Sets style properties in an element as defined in an object\n  *   with key-value pairs of rules (compatible with jQuery)\n  */\n  function setStylesFromObject(el, cssObj){\n    Object.keys(cssObj).forEach(function setStyleFromObject(key){\n      el.style[key] = cssObj[key];\n    });\n  }\n\n  /** @function _css\n  *   @description: Gets the computed styles of an element and returns\n  *   key-value pairs of rules (compatible with jQuery)\n  */\n  function _css(el){\n      var rules = window.getComputedStyle(el);\n      return _css2json(rules);\n  }\n\n  /** @function _css2json\n  *   @description: Converts CSSStyleDeclaration objects or css rules\n  *   in string format to key-value pairs (compatible with jQuery)\n  */\n  function _css2json(css){\n      var s = {};\n      if(!css) return s;\n      if(css instanceof CSSStyleDeclaration) {\n          for(var i in css) {\n            if(!css[i]) {break;}\n              if((css[i]).toLowerCase) {\n                  s[(css[i]).toLowerCase()] = (css[css[i]]);\n              }\n          }\n      } \n      else if(typeof css == \"string\") {\n          css = css.split(\"; \");          \n          for (var i in css) {\n              var l = css[i].split(\": \");\n              s[l[0].toLowerCase()] = (l[1]);\n          };\n      }\n      return s;\n  }\n\n  // Public API\n  return {\n    createThumb : createThumb,\n    resizeThumb : resizeThumb\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/components/thumbnail-manager/impressThumbGenerator.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}